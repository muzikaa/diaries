---
import Main from "../layouts/Main.astro";
import {requireUser} from "./diaries/_guard";

/* Check if the user is authenticated */
try {
    const user = await requireUser(Astro);
    return Astro.redirect('/publish');
} catch {
}
---
<Main>
    <h1 class="text-8xl pl-10 p-7 emphasis">Sign in</h1>
    <form class="pl-10 " action="/api/auth/signin" method="post">
        <label class="text-2xl white font-bold" for="email" for="email">Email: </label>
        <input class="textinput mb-2 text-2xl" type="email" name="email" id="email" />
        <br/>
        <label class="text-2xl white font-bold" for="password">Password: </label>
        <input class="textinput mb-5 text-2xl" type="password" name="password" id="password" />
        <br/>
        <button type="submit" class="relative inline-flex items-center justify-center p-0.5 mb-2 me-2 overflow-hidden text-xl font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-purple-500 to-pink-500 group-hover:from-purple-500 group-hover:to-pink-500 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-purple-200 dark:focus:ring-purple-800">
            <span class="relative px-5 py-2.5 transition-all ease-in duration-75 bg-[#180A0A] rounded-md group-hover:bg-transparent group-hover:dark:bg-transparent">
                Login
            </span>
        </button>
    </form>
</Main>

<style>
    .textinput {
        border: 2px solid gray;
        border-radius: 4px;
    }
</style>

<script>
  import {
    getAuth,
    inMemoryPersistence,
    signInWithEmailAndPassword,
  } from "firebase/auth";
  import { app } from "../firebase/client";

  const auth = getAuth(app);
  // This will prevent the browser from storing session data
  auth.setPersistence(inMemoryPersistence);

  const form = document.querySelector("form") as HTMLFormElement;
  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    const email = formData.get("email")?.toString();
    const password = formData.get("password")?.toString();

    if (!email || !password) {
      return;
    }
    const userCredential = await signInWithEmailAndPassword(
      auth,
      email,
      password
    );
    const idToken = await userCredential.user.getIdToken();
    const response = await fetch("/api/auth/signin", {
      method: "GET",
      headers: {
        Authorization: `Bearer ${idToken}`,
      },
    });

    if (response.redirected) {
      window.location.assign(response.url);
    }
  });
</script>